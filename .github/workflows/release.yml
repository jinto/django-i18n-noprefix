name: Release

on:
  push:
    tags:
      - 'v*'  # v0.1.0, v1.0.0 Îì±Ïùò ÌÉúÍ∑∏ Ìë∏Ïãú Ïãú Ïã§Ìñâ

permissions:
  contents: write  # GitHub Release ÏÉùÏÑ± Í∂åÌïú
  id-token: write  # Trusted Publishing (ÏÑ†ÌÉùÏ†Å)

jobs:
  # 1Îã®Í≥Ñ: ÌÖåÏä§Ìä∏ Ïã§Ìñâ
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10", "3.12"]
        django-version: ["4.2", "5.0", "5.1"]
        exclude:
          - python-version: "3.8"
            django-version: "5.0"
          - python-version: "3.8"
            django-version: "5.1"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "Django~=${{ matrix.django-version }}.0"
          pip install -e ".[dev]"

      - name: Run tests
        run: |
          pytest tests/ -v --tb=short

  # 2Îã®Í≥Ñ: Ìå®ÌÇ§ÏßÄ ÎπåÎìú
  build:
    name: Build Package
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: |
          twine check dist/*
          ls -la dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  # 3Îã®Í≥Ñ: TestPyPI Î∞∞Ìè¨
  test-deploy:
    name: Deploy to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: test-pypi
      url: https://test.pypi.org/project/django-i18n-noprefix/

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist/

      - name: Install twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Upload to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          twine upload --repository testpypi dist/* --verbose

      - name: Test installation from TestPyPI
        run: |
          python -m pip install --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple/ \
            django-i18n-noprefix
          python -c "import django_i18n_noprefix; print(f'Version: {django_i18n_noprefix.__version__}')"

  # 4Îã®Í≥Ñ: PyPI Î∞∞Ìè¨ (ÏàòÎèô ÏäπÏù∏ ÌïÑÏöî)
  deploy:
    name: Deploy to PyPI
    needs: test-deploy
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/django-i18n-noprefix/

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist/

      - name: Install twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/* --verbose

  # 5Îã®Í≥Ñ: GitHub Release ÏÉùÏÑ±
  release:
    name: Create GitHub Release
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ï†ÑÏ≤¥ ÌûàÏä§ÌÜ†Î¶¨ Í∞ÄÏ†∏Ïò§Í∏∞ (Î¶¥Î¶¨Ï¶à ÎÖ∏Ìä∏ ÏÉùÏÑ±Ïö©)

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist/

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: notes
        run: |
          # Ïù¥Ï†Ñ ÌÉúÍ∑∏ Ï∞æÍ∏∞
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [ -z "$PREVIOUS_TAG" ]; then
            echo "First release! üéâ" > release_notes.md
          else
            echo "## What's Changed" > release_notes.md
            echo "" >> release_notes.md

            # Ïª§Î∞ã Î°úÍ∑∏ÏóêÏÑú Î≥ÄÍ≤ΩÏÇ¨Ìï≠ Ï∂îÏ∂ú
            git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" >> release_notes.md
          fi

          echo "" >> release_notes.md
          echo "" >> release_notes.md
          echo "## Installation" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo "pip install django-i18n-noprefix==${{ steps.version.outputs.VERSION }}" >> release_notes.md
          echo '```' >> release_notes.md

          echo "" >> release_notes.md
          echo "## Links" >> release_notes.md
          echo "- [PyPI](https://pypi.org/project/django-i18n-noprefix/${{ steps.version.outputs.VERSION }}/)" >> release_notes.md
          echo "- [Documentation](https://github.com/jinto/django-i18n-noprefix#readme)" >> release_notes.md
          echo "- [Changelog](https://github.com/jinto/django-i18n-noprefix/blob/main/CHANGELOG.md)" >> release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.version.outputs.VERSION }}
          body_path: release_notes.md
          files: |
            dist/*.whl
            dist/*.tar.gz
          draft: false
          prerelease: ${{ contains(steps.version.outputs.VERSION, 'rc') || contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'alpha') }}

  # 6Îã®Í≥Ñ: Î∞∞Ìè¨ ÌõÑ Í≤ÄÏ¶ù
  verify:
    name: Verify Deployment
    needs: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10", "3.12"]

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install from PyPI
        run: |
          python -m pip install --upgrade pip
          pip install django-i18n-noprefix

      - name: Verify import
        run: |
          python -c "import django_i18n_noprefix; print(f'Successfully installed version: {django_i18n_noprefix.__version__}')"

      - name: Check package info
        run: |
          pip show django-i18n-noprefix
